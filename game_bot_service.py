import asyncio
import time
from threading import Thread

from devices.device import Device
from devices.wincap import find_window_by_title, screenshot_window_np
from tg.bot_config import BotConfig
from tg.telegram_bot import TelegramBot


class GameBotService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞ —Å –∑–∞—Ö–≤–∞—Ç–æ–º —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤"""

    def __init__(self, bot_token: str, window_title: str = "Rogue Hearts"):
        self.bot = TelegramBot(bot_token)
        self.window_title = window_title
        self.hwnd = None
        self.running = False
        self.screenshot_thread = None

        # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        self.bot.add_command_handler("screenshot", self._live_screenshot_command)
        self.bot.add_command_handler("window", self._window_info_command)
        self.bot.add_command_handler("close", self._close_window_command)

    async def _close_window_command(self, update, context):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞"""
        try:
            device = Device("127.0.0.1", 58526)
            device.connect()
            device.force_stop_rogue_hearts()
            device.close()

            await update.message.reply_text(f"ü™ü –û–∫–Ω–æ '{self.window_title}' –∑–∞–∫—Ä—ã—Ç–æ")

        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    async def _live_screenshot_command(self, update, context):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∂–∏–≤–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞"""
        try:
            if not self.hwnd:
                await update.message.reply_text("‚ùå –û–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return

            # –î–µ–ª–∞–µ–º –Ω–æ–≤—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
            frame = screenshot_window_np(self.hwnd, client_only=True)
            self.bot.update_image(frame)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
            await self.bot.screenshot_command(update, context)

        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞—Ö–≤–∞—Ç–∞: {str(e)}")

    async def _window_info_command(self, update, context):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ü–µ–ª–µ–≤–æ–º –æ–∫–Ω–µ"""
        try:
            self._find_window()
            if self.hwnd:
                message = f"ü™ü –û–∫–Ω–æ –Ω–∞–π–¥–µ–Ω–æ: {self.window_title}\nHWND: {self.hwnd}"
            else:
                message = f"‚ùå –û–∫–Ω–æ '{self.window_title}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

            await update.message.reply_text(message)

        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

    def _find_window(self):
        """–ü–æ–∏—Å–∫ —Ü–µ–ª–µ–≤–æ–≥–æ –æ–∫–Ω–∞"""
        try:
            self.hwnd = find_window_by_title(self.window_title)
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–∫–Ω–æ: {self.window_title} (HWND: {self.hwnd})")
            return True
        except RuntimeError as e:
            print(f"‚ùå –û–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {e}")
            self.hwnd = None
            return False

    def _game_bot_worker(self):
        """–†–∞–±–æ—á–∏–π –ø–æ—Ç–æ–∫ –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤"""
        last_update = 0
        update_interval = 500.0  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥

        while self.running:
            try:
                current_time = time.time()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç
                if current_time - last_update >= update_interval:
                    if self.hwnd or self._find_window():
                        frame = screenshot_window_np(self.hwnd, client_only=True)
                        self.bot.update_image(frame)
                        last_update = current_time

                time.sleep(1)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –≤ –ø–æ—Ç–æ–∫–µ game-–±–æ—Ç–∞: {e}")
                time.sleep(5)  # –ñ–¥–µ–º –¥–æ–ª—å—à–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

    async def start(self):
        """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞"""
        print("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ game-–±–æ—Ç–∞...")

        # –ò—â–µ–º –æ–∫–Ω–æ
        self._find_window()

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
        self.running = True
        self.screenshot_thread = Thread(target=self._game_bot_worker, daemon=True)
        self.screenshot_thread.start()

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await self.bot.run()

    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"""
        print("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ game-–±–æ—Ç–∞...")
        self.running = False
        if self.screenshot_thread:
            self.screenshot_thread.join(timeout=5)


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    config = BotConfig()
    service = GameBotService(
        config.get("telegram.bot_token"),
        config.get("screenshot.window_title"),
    )

    try:
        await service.start()
    except KeyboardInterrupt:
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    finally:
        service.stop()


if __name__ == "__main__":
    asyncio.run(main())
