"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞
"""

import json
import os
import sys

def setup_bot():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞"""
    print("ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram Screenshot Bot!")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    try:
        import telegram
        print("‚úÖ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ python-telegram-bot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    except ImportError:
        print("‚ùå –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ python-telegram-bot –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r telegram_requirements.txt")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ OpenCV
    try:
        import cv2
        print("‚úÖ OpenCV —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå OpenCV –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r telegram_requirements.txt")
        return False
    
    print("\nüìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    bot_token = input("\nüîë –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram –±–æ—Ç–∞: ").strip()
    if not bot_token or bot_token == "YOUR_BOT_TOKEN_HERE":
        print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
        print("–°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather –≤ Telegram")
        return False
    
    # –ü–æ–ª—É—á–∞–µ–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    print("\nüë§ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞—à–µ–≥–æ Telegram User ID:")
    print("   1. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É @userinfobot")
    print("   2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à ID –∏–∑ –æ—Ç–≤–µ—Ç–∞")
    
    admin_id = input("\nüîß –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram User ID (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä): ").strip()
    try:
        admin_id = int(admin_id)
    except ValueError:
        print("‚ùå ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return False
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞
    window_title = input("\nü™ü –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–∫–Ω–∞ –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'Rogue Hearts'): ").strip()
    if not window_title:
        window_title = "Rogue Hearts"
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = {
        "telegram": {
            "bot_token": bot_token,
            "allowed_users": [],  # –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ = –¥–æ—Å—Ç—É–ø –≤—Å–µ–º
            "admin_users": [admin_id]
        },
        "screenshot": {
            "window_title": window_title,
            "update_interval": 5.0,
            "quality": "high",
            "auto_update": True
        },
        "commands": {
            "enabled": [
                "start", "help", "screenshot", "live", 
                "status", "ping", "window", "config"
            ],
            "admin_only": ["window", "status", "config"]
        },
        "logging": {
            "level": "INFO",
            "file": "bot.log"
        }
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    try:
        with open("bot_config.json", "w", encoding="utf-8") as f:
            json.dump(config, f, ensure_ascii=False, indent=2)
        print(f"\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ bot_config.json")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –±–∞—Ç–Ω–∏–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ (Windows)
    if os.name == 'nt':
        try:
            with open("run_bot.bat", "w", encoding="utf-8") as f:
                f.write("@echo off\n")
                f.write("echo –ó–∞–ø—É—Å–∫ Telegram Screenshot Bot...\n")
                f.write("python screenshot_bot_service.py\n")
                f.write("pause\n")
            print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª run_bot.bat –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å bat —Ñ–∞–π–ª: {e}")
    
    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–∫–Ω–æ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '" + window_title + "' –æ—Ç–∫—Ä—ã—Ç–æ")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:")
    print("   - python screenshot_bot_service.py")
    print("   - run_bot.bat (–µ—Å–ª–∏ —Å–æ–∑–¥–∞–Ω)")
    print("3. –ù–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –≤ Telegram –∫–æ–º–∞–Ω–¥—É /start")
    
    print("\nüîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:")
    print("   /screenshot - –ø–æ–ª—É—á–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")
    print("   /live - —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç")
    print("   /status - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã (–∞–¥–º–∏–Ω)")
    print("   /help - —Å–ø—Ä–∞–≤–∫–∞")
    
    return True

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ —Å–∏—Å—Ç–µ–º–µ"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ —Å–∏—Å—Ç–µ–º–µ...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –≤–µ—Ä—Å–∏—é
    if sys.version_info < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        return False
    else:
        print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    required_files = [
        "telegram_bot.py",
        "advanced_telegram_bot.py", 
        "screenshot_bot_service.py",
        "bot_config.py",
        "requirements.txt"
    ]
    
    missing_files = []
    for file in required_files:
        if os.path.exists(file):
            print(f"‚úÖ {file}")
        else:
            print(f"‚ùå {file}")
            missing_files.append(file)
    
    if missing_files:
        print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        return False
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîß –ú–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram Screenshot Bot")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    if not check_requirements():
        print("\n‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return
    
    print("\n" + "=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    if setup_bot():
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É!")
    else:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main()